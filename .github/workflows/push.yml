name: Lint, test and notify

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --progress-bar off --no-cache-dir --upgrade pip
        pip install --progress-bar off --no-cache-dir -r requirements-dev.txt
    - name: Analysing the code with Flake8
      run: |
        flake8
    - name: Typer checking with mypy
      run: |
        mypy --no-incremental -v .
    - name: Run tests with pytest
      run: |
        pytest
  failure_notification:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: Sniddl/discord-commits@v1.5
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_STATUS }} # required
          message: ":x: Build failed for **{{ github.context.payload.repository.owner.name }}/{{ github.context.payload.repository.name}}**. Run output:  ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\nDiff: {{ github.context.payload.compare }}"
          embed: '{ "title": "{{ commit.title }}", "description": "{{ commit.description }}", "url": "{{ commit.url }}", "author": { "name": "{{ commit.author.name }} ({{ commit.author.username }})", "icon_url": "https://avatars.io/gravatar/{{ commit.author.email }}"} }'
    if: failure()
  success_notification:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: Sniddl/discord-commits@v1.5
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_STATUS }} # required
          message: ":white_check_mark: Build succeeded for **{{ github.context.payload.repository.owner.name }}/{{ github.context.payload.repository.name}}**. Run output: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\nDiff: {{ github.context.payload.compare }}"
          embed: '{ "title": "{{ commit.title }}", "description": "{{ commit.description }}", "url": "{{ commit.url }}", "author": { "name": "{{ commit.author.name }} ({{ commit.author.username }})", "icon_url": "https://avatars.io/gravatar/{{ commit.author.email }}"} }'
    if: success()
